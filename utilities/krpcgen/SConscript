#
# Copyright (C) 2010-2011 Alex Smith
#
# Permission to use, copy, modify, and/or distribute this software for any
# purpose with or without fee is hereby granted, provided that the above
# copyright notice and this permission notice appear in all copies.
#
# THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
# WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
# MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
# ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
# WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
# ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
# OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
#

import os.path
Import('env', 'manager')

# Add krpcgen to the build environments.
manager.AddVariable('KRPCGEN', env.Program('krpcgen', [
    'CXXCodeGen.cc',
    'Function.cc',
    'Service.cc',
    'Type.cc',
    'parser.y',
    'lexer.l',
    'main.cc',
]))

# Add builders to generate RPC server/client code.
def rpc_emitter(target, source, env):
    target.append(File(os.path.splitext(str(target[0]))[0] + '.h'))
    env.Depends(target[0], env['KRPCGEN'])
    env.Depends(target[1], env['KRPCGEN'])
    return target, source
manager.AddBuilder('RPCServerClient', Builder(
    action=Action('$KRPCGEN -s -c -o $TARGET $SOURCE', '$GENCOMSTR'),
    emitter=rpc_emitter))
manager.AddBuilder('RPCServer', Builder(
    action=Action('$KRPCGEN -s -o $TARGET $SOURCE', '$GENCOMSTR'),
    emitter=rpc_emitter))
manager.AddBuilder('RPCClient', Builder(
    action=Action('$KRPCGEN -c -o $TARGET $SOURCE', '$GENCOMSTR'),
    emitter=rpc_emitter))
